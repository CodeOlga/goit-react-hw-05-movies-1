{"version":3,"file":"static/js/145.f5671119.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/moviesAPI.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return <div>\n  <ul>\n      {movies?.map(({id, title, name })=> {\n        return <li key={id}>\n          <Link to={`/movies/${id}`} state={{from: location}}>{title ?? name}</Link>\n        </li> \n    })}\n      </ul>\n  </div>\n}\nexport default MovieList;\n\n// Когда код выполняется, каждый элемент массива movies будет пройден через функцию map.\n// В каждой итерации будет создана ссылка(Link) с адресом, \n// который будет зависеть от значения id, полученного из текущего элемента массива.\n// Например, если id элемента равно 123, то ссылка будет иметь адрес /movies/123. \n// Если id равен 456, ссылка будет / movies / 456, и так далее для каждого элемента массива.\n// Таким образом, каждая ссылка будет привязана к соответствующему элементу массива movies\n// и при клике на нее, пользователь будет перенаправлен на страницу с подробной информацией \n// о фильме или элементе, который имеет определенный id.","import { useSearchParams } from 'react-router-dom';\n\nconst SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const queryValue = query !== \"\" ? { query } : {};\n    setSearchParams(queryValue);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //получаем значение из инпута с именем \"search\" (name='search') и обрезаем пробелы по краям с помощью trim()\n    //и это значение затем используется для обновления параметров URL,\n    //чтобы выполнить поиск на сервере и получить соответствующие результаты\n    \n    const searchValue = e.target.elements.search.value.trim();\n\n    if (searchValue === '') {\n      return;\n    }\n\n    updateQueryString(searchValue)\n    //не особо работает очистка\n    // e.currentTarget.reset();\n    // Сброс значения input элемента на пустую строку\n    // e.target.elements.search.value = '';\n  }\n  return( \n    <form autoComplete='off' onSubmit={handleSubmit}>\n      <input type=\"text\"\n        name='search'\n\n        //устанавливаем значение defaultValue={query}, чтобы \n        //отображать в инпуте текущее значение поискового запроса из URL\n        \n        defaultValue={query}\n      />\n      <button type='submit'>Search</button>\n    </form>\n  )\n}\nexport default SearchForm;\n\n//   //------------1----------------------\n//   // const updateQueryString = e => {\n//   //   //если в e.target.value '', то записываем {}\n//   //   //если в e.target.value не '', то записываем { query: e.target.value }\n//   //   const queryValue = e.target.value;\n//   //   if (queryValue === '') {\n//   //     return setSearchParams({})\n//   //   }\n//   //     setSearchParams({ query: queryValue })\n//   // };\n\n//   //-----------2----------------------\n//   //то же самое, только берем не значение value из input, а name из form\n//   const updateQueryString = query => {\n//     const queryValue = query !== \"\" ? { query } : {};\n//     console.log(queryValue)\n//     setSearchParams(queryValue);\n//   };","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/moviesAPI';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n\n//значение value у input должно быть валидным значением (не может быть null, undefind),\n//а если нет никаких параметров в query то value будет null/undefind\n//query - то, что ввел пользователь в инпут\n// console.log(query) //movies?query=batman\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n      if (!query) {\n      return;\n      }\n    \n    const fetchQueryMovies = async (searchQuery) => {\n      try {\n        setLoading(true);\n        const { results } = await searchMovies(searchQuery);\n        //searchQuery получает значение из searchValue и используется для выполнения поиска фильмов на сервере\n        //console.log(searchQuery) //batman\n        //console.log(results)// массив фильмов\n\n        setFoundMovies(results)\n\n        if (results.length === 0) {\n          alert(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n        }\n      } catch (error) {\n        alert(`Something goes wrong. Please, try again.`);\n      } finally {\n          setLoading(false);\n      }\n    }\n    fetchQueryMovies(query)\n  }, [query])\n\n  return <div>\n    <SearchForm />\n\n    {loading && (\n      <p>Loading...</p>\n    )}\n\n    <MovieList movies={foundMovies}/>\n  </div>\n}\n\nexport default Movies;\n\n\n// Описание каждой переменной:\n\n// query: Хранит значение поискового запроса из параметров URL.\n// searchQuery: Аргумент функции для выполнения поиска фильмов на сервере.\n// queryValue: Хранит текущее значение поискового запроса, введенное пользователем в инпуте.\n// searchValue: Хранит значение поискового запроса, которое будет отправлено на сервер после отправки формы.\n\n// Взаимосвязь:\n\n// query используется для инициализации queryValue при первой загрузке страницы.\n// queryValue используется для отображения текущего значения поискового запроса в инпуте.\n// При отправке формы, searchValue получает значение из инпута, и это значение затем используется для обновления параметров URL, чтобы выполнить поиск на сервере и получить соответствующие результаты.\n// searchQuery получает значение из searchValue и используется для выполнения поиска фильмов на сервере.\n// Результаты поиска фильмов сохраняются в searchMovie и отображаются в компоненте MovieList.\n// loading используется для отображения индикатора загрузки, когда выполняется поиск на сервере.\n\n\n\n\n","import axios from 'axios';\n\nconst API_KEY = 'b7f4cad4e445fd34e5bb25c56b6a57eb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//список самых популярных фильмов на сегодня для создания коллекции на главной странице Home\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return data;\n};\n\n//поиск кинофильма по ключевому слову на странице фильмов Movies\nexport const searchMovies = async searchQuery => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n  return data;\n};\n\n//запрос полной информации о фильме для страницы кинофильма MovieDetails\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\n//запрос информации о актёрском составе для страницы кинофильма MovieDetails/cast\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\n//запрос обзоров для страницы кинофильма MovieDetails/reviews\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","name","Link","to","concat","state","from","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","_jsxs","autoComplete","onSubmit","e","preventDefault","searchValue","target","elements","search","value","trim","updateQueryString","type","defaultValue","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_useState","useState","_useState2","foundMovies","setFoundMovies","_useState3","_useState4","loading","setLoading","useEffect","fetchQueryMovies","_asyncToGenerator","_callee","searchQuery","_yield$searchMovies","results","_context","searchMovies","alert","t0","_x","apply","arguments","SearchForm","MovieList","API_KEY","axios","getTrendingMovies","_yield$axios$get","data","_callee2","_yield$axios$get2","_context2","getMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}